{"version":3,"sources":["App.js","index.js"],"names":["App","Form","useForm","form","useLocalStorage","list","setValue","useState","isModalOpen","setIsModalOpen","loading","setLoading","currentName","setCurrentName","handleCancel","className","type","onClick","setTimeout","style","marginTop","map","item","direction","fontSize","pageName","size","newList","filter","removeAt","spinning","height","width","src","pageUrl","title","open","onCancel","footer","destroyOnClose","name","preserve","onFinish","value","autoComplete","Item","label","rules","required","message","wrapperCol","offset","span","htmlType","rootElement","document","getElementById","createRoot","render"],"mappings":"+OAKe,SAASA,IACtB,MAAeC,IAAKC,UAAbC,EAAsB,iBAAlB,GACX,EAAyBC,YAAgB,YAAa,IAAG,mBAAlDC,EAAI,KAAEC,EAAQ,KACrB,EAAsCC,oBAAS,GAAM,mBAA9CC,EAAW,KAAEC,EAAc,KAClC,EAA8BF,oBAAS,GAAM,mBAAtCG,EAAO,KAAEC,EAAU,KAC1B,EAAsCJ,oBAAU,GAAE,mBAA3CK,EAAW,KAAEC,EAAc,KAI5BC,EAAe,WACnBL,GAAe,EACjB,EA6BA,OACE,sBAAKM,UAAU,MAAK,UAClB,eAAC,IAAK,WACJ,cAAC,IAAM,CAACC,KAAK,UAAUC,QA/Bb,WALdR,GAAe,EAQjB,EA4B8C,SAAC,6BAGzC,cAAC,IAAM,CAACO,KAAK,UAAUC,QAtBV,WACjBN,GAAW,GACXO,YAAW,WACTP,GAAW,EACb,GAAG,IACL,EAiBiD,SAAC,6BAG5C,cAAC,IAAM,CAACM,QA5BI,WAChBX,EAAS,GACX,EA0BiC,SAAC,gCAE9B,qBAAKS,UAAU,iBAAiBI,MAAO,CAAEC,UAAW,IAAK,SACtDf,EAAKgB,KAAI,SAACC,GAAI,OACb,eAAC,IAAK,CAACC,UAAU,WAAU,UACzB,eAAC,IAAK,WACJ,qBAAKJ,MAAO,CAAEK,SAAU,IAAK,SAAEF,EAAKG,WACpC,cAAC,IAAM,CACLT,KAAK,UACLU,KAAK,QACLT,QAAS,kBA7BN,SAACQ,GAChB,IAAME,EAAUtB,EAAKuB,QAAO,SAACN,GAAI,OAAKA,EAAKG,WAAaA,CAAQ,IAChEnB,EAASqB,EACX,CA0B6BE,CAASP,EAAKG,SAAS,EAAC,SACxC,iBAGD,cAAC,IAAM,CACLT,KAAK,UACLU,KAAK,QACLT,QAAS,kBAhCAQ,EAgCoBH,EAAKG,SA/B9CZ,EAAeY,QACfP,YAAW,WACTL,GAAgB,EAClB,GAAG,KAJiB,IAACY,CAgCkC,EAAC,SAC7C,oBAKFf,GAAWE,IAAgBU,EAAKG,SAC/B,cAAC,IAAI,CAACK,UAAU,EAAK,SACnB,qBAAKX,MAAO,CAAEY,OAAQ,SAGxB,wBACEC,MAAM,OAEND,OAAO,QACPE,IAAKX,EAAKY,QACVC,MAAOb,EAAKG,UAHPH,EAAKG,YAMR,MAGZ,cAAC,IAAK,CACJU,MAAM,2BACNC,KAAM5B,EACN6B,SAAUvB,EACVwB,QAAQ,EACRC,gBAAc,WAEd,eAAC,IAAI,CACHC,KAAK,QACLrC,KAAMA,EACNsC,UAAU,EACVC,SAnFS,SAACC,GAChB,IAAMhB,EAAO,sBAAOtB,GAAI,CAAEsC,IAC1BrC,EAASqB,GACTb,GACF,EAgFQ8B,aAAa,MAAK,UAElB,cAAC,IAAKC,KAAI,CACRC,MAAM,eACNN,KAAK,UACLO,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,2BAEX,SAEF,cAAC,IAAK,MAER,cAAC,IAAKJ,KAAI,CACRC,MAAM,eACNN,KAAK,WACLO,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCAEX,SAEF,cAAC,IAAK,MAER,cAAC,IAAKJ,KAAI,CACRK,WAAY,CACVC,OAAQ,GACRC,KAAM,IACN,SAEF,cAAC,IAAM,CAACpC,KAAK,UAAUqC,SAAS,SAAQ,SAAC,0BAQrD,CC5IA,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC1D,EAAG,M","file":"static/js/main.7af9cfd0.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { useState } from \"react\";\nimport { Button, Space, Form, Modal, Input, Spin } from \"antd\";\nimport { useLocalStorage } from \"react-use\";\n\nexport default function App() {\n  const [form] = Form.useForm();\n  const [list, setValue] = useLocalStorage(\"page-list\", []);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [currentName, setCurrentName] = useState(-1);\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n  const addPage = () => {\n    // setValue([]);\n    showModal();\n  };\n  const onFinish = (value) => {\n    const newList = [...list, value];\n    setValue(newList);\n    handleCancel();\n  };\n  const removeAll = () => {\n    setValue([]);\n  };\n  const refreshAll = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 500);\n  };\n  const removeAt = (pageName) => {\n    const newList = list.filter((item) => item.pageName !== pageName);\n    setValue(newList);\n  };\n  const setUpdateName = (pageName) => {\n    setCurrentName(pageName);\n    setTimeout(() => {\n      setCurrentName(-1);\n    }, 500);\n  };\n  return (\n    <div className=\"App\">\n      <Space>\n        <Button type=\"primary\" onClick={addPage}>\n          添加网址\n        </Button>\n        <Button type=\"primary\" onClick={refreshAll}>\n          全部刷新\n        </Button>\n        <Button onClick={removeAll}>全部删除</Button>\n      </Space>\n      <div className=\"grid-container\" style={{ marginTop: 10 }}>\n        {list.map((item) => (\n          <Space direction=\"vertical\">\n            <Space>\n              <div style={{ fontSize: 18 }}>{item.pageName}</div>\n              <Button\n                type=\"primary\"\n                size=\"small\"\n                onClick={() => removeAt(item.pageName)}\n              >\n                删除\n              </Button>\n              <Button\n                type=\"primary\"\n                size=\"small\"\n                onClick={() => setUpdateName(item.pageName)}\n              >\n                刷新\n              </Button>\n            </Space>\n\n            {loading || currentName === item.pageName ? (\n              <Spin spinning={true}>\n                <div style={{ height: 400 }}></div>\n              </Spin>\n            ) : (\n              <iframe\n                width=\"100%\"\n                key={item.pageName}\n                height=\"400px\"\n                src={item.pageUrl}\n                title={item.pageName}\n              ></iframe>\n            )}\n          </Space>\n        ))}\n      </div>\n      <Modal\n        title=\"添加网页\"\n        open={isModalOpen}\n        onCancel={handleCancel}\n        footer={false}\n        destroyOnClose\n      >\n        <Form\n          name=\"basic\"\n          form={form}\n          preserve={false}\n          onFinish={onFinish}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            label=\"网址\"\n            name=\"pageUrl\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your url!\"\n              }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"名称\"\n            name=\"pageName\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your pagename!\"\n              }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{\n              offset: 20,\n              span: 10\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              确定\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}