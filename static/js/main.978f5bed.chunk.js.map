{"version":3,"sources":["App.js","index.js"],"names":["App","_Form$useForm","Form","useForm","form","_slicedToArray","_useLocalStorage","useLocalStorage","_useLocalStorage2","list","setValue","_useState","useState","_useState2","isModalOpen","setIsModalOpen","_useState3","_useState4","loading","setLoading","_useState5","_useState6","currentName","setCurrentName","_useState7","_useState8","colNum","setColNum","handleCancel","_jsxs","className","children","Space","_jsx","Button","type","onClick","setTimeout","Select","value","onChange","n","map","num","Option","label","style","marginTop","gridTemplateColumns","concat","item","direction","fontSize","pageName","size","newList","filter","removeAt","Spin","spinning","height","width","src","pageUrl","title","Modal","open","onCancel","footer","destroyOnClose","name","preserve","onFinish","_toConsumableArray","autoComplete","Item","rules","required","message","Input","wrapperCol","offset","span","htmlType","rootElement","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.978f5bed.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { useState } from \"react\";\nimport { Button, Select, Space, Form, Modal, Input, Spin } from \"antd\";\nimport { useLocalStorage } from \"react-use\";\n\nexport default function App() {\n  const [form] = Form.useForm();\n  const [list, setValue] = useLocalStorage(\"page-list\", []);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [currentName, setCurrentName] = useState(-1);\n  const [colNum, setColNum] = useState(2);\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n  const addPage = () => {\n    // setValue([]);\n    showModal();\n  };\n  const onFinish = (value) => {\n    const newList = [...list, value];\n    setValue(newList);\n    handleCancel();\n  };\n  const removeAll = () => {\n    setValue([]);\n  };\n  const refreshAll = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 500);\n  };\n  const removeAt = (pageName) => {\n    const newList = list.filter((item) => item.pageName !== pageName);\n    setValue(newList);\n  };\n  const setUpdateName = (pageName) => {\n    setCurrentName(pageName);\n    setTimeout(() => {\n      setCurrentName(-1);\n    }, 500);\n  };\n  return (\n    <div className=\"App\">\n      <Space>\n        <Button type=\"primary\" onClick={addPage}>\n          添加网址\n        </Button>\n        <Button type=\"primary\" onClick={refreshAll}>\n          全部刷新\n        </Button>\n        <span>列数</span>\n        <Select value={colNum} onChange={(n) => setColNum(n)}>\n          {[1, 2, 3, 4].map((num) => (\n            <Select.Option key={num} label={num} value={num} />\n          ))}\n        </Select>\n        <Button onClick={removeAll}>全部删除</Button>\n      </Space>\n      <div\n        className=\"grid-container\"\n        style={{ marginTop: 10, gridTemplateColumns: `repeat(${colNum}, 1fr)` }}\n      >\n        {list.map((item) => (\n          <Space direction=\"vertical\">\n            <Space>\n              <div style={{ fontSize: 18 }}>{item.pageName}</div>\n              <Button\n                type=\"primary\"\n                size=\"small\"\n                onClick={() => removeAt(item.pageName)}\n              >\n                删除\n              </Button>\n              <Button\n                type=\"primary\"\n                size=\"small\"\n                onClick={() => setUpdateName(item.pageName)}\n              >\n                刷新\n              </Button>\n            </Space>\n\n            {loading || currentName === item.pageName ? (\n              <Spin spinning={true}>\n                <div style={{ height: 400 }}></div>\n              </Spin>\n            ) : (\n              <iframe\n                width=\"100%\"\n                key={item.pageName}\n                height=\"400px\"\n                src={item.pageUrl}\n                title={item.pageName}\n              ></iframe>\n            )}\n          </Space>\n        ))}\n      </div>\n      <Modal\n        title=\"添加网页\"\n        open={isModalOpen}\n        onCancel={handleCancel}\n        footer={false}\n        destroyOnClose\n      >\n        <Form\n          name=\"basic\"\n          form={form}\n          preserve={false}\n          onFinish={onFinish}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            label=\"网址\"\n            name=\"pageUrl\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your url!\"\n              }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"名称\"\n            name=\"pageName\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your pagename!\"\n              }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{\n              offset: 20,\n              span: 10\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              确定\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}